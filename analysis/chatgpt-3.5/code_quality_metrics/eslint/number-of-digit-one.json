{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    let factor = 1;\n    \n    while (n >= factor) {\n        let currentDigit = Math.floor((n / factor) % 10);\n        let higherDigits = Math.floor(n / (factor * 10));\n        let lowerDigits = n % factor;\n        \n        if (currentDigit === 0) {\n            count += higherDigits * factor;\n        } else if (currentDigit === 1) {\n            count += higherDigits * factor + lowerDigits + 1;\n        } else {\n            count += (higherDigits + 1) * factor;\n        }\n        \n        factor *= 10;\n    }\n    \n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        let num = i;\n        while (num > 0) {\n            if (num % 10 === 1) {\n                count++;\n            }\n            num = Math.floor(num / 10);\n        }\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i *= 10) {\n        const divider = i * 10;\n        count += Math.floor(n / divider) * i + Math.min(Math.max(n % divider - i + 1, 0), i);\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    if (n <= 0) return 0;\n    let str = n.toString();\n    let firstDigit = parseInt(str[0]);\n    let remainingDigits = parseInt(str.slice(1));\n    let totalCount = 0;\n    \n    if (firstDigit === 1) {\n        totalCount += remainingDigits + 1;\n    } else if (firstDigit > 1) {\n        totalCount += Math.pow(10, str.length - 1);\n    }\n    \n    totalCount += firstDigit * countDigitOne(Math.pow(10, str.length - 1) - 1);\n    totalCount += countDigitOne(remainingDigits);\n    \n    return totalCount;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += (i.toString().match(/1/g) || []).length;\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    const dp = new Array(10).fill(0);\n    let num = n + 1;\n    let count = 0;\n\n    for (let i = 1; i < 10; i++) {\n        dp[i] = dp[i - 1] * 10 + num;\n        num = Math.floor(num / 10);\n    }\n\n    num = n + 1;\n    for (let i = 8; i >= 0; i--) {\n        const q = Math.floor(num / (10 ** i));\n        num = num % (10 ** i);\n        count += q * dp[i] + (q >= 2 ? 10 ** i : 0);\n    }\n\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    let m = 1;\n    \n    while (m <= n) {\n        let a = Math.floor(n / (m * 10)) * m;\n        let b = Math.min(Math.max(n % (m * 10) - m + 1, 0), m);\n        count += a + b;\n        m *= 10;\n    }\n    \n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        let str = i.toString();\n        count += str.split('1').length - 1;\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i *= 10) {\n        const divider = i * 10;\n        count += Math.floor((n / divider)) * i + Math.min(Math.max((n % divider) - i + 1, 0), i);\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/number-of-digit-one/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var countDigitOne = function(n) {\n    if (n <= 0) return 0;\n    const str = n.toString();\n    const len = str.length;\n    const dp = new Array(len).fill(0);\n    dp[0] = 1;\n\n    for (let i = 1; i < len; i++) {\n        dp[i] = dp[i - 1] * 10 + 10 ** i;\n    }\n\n    let count = 0;\n    let carry = 0;\n\n    for (let i = len - 1; i >= 0; i--) {\n        const digit = parseInt(str[i]);\n        const leftPart = parseInt(str.substring(0, i)) || 0;\n        const rightPart = parseInt(str.substring(i + 1)) || 0;\n\n        if (digit === 0) {\n            count += leftPart * dp[i];\n        } else if (digit === 1) {\n            count += leftPart * dp[i] + rightPart + 1 + carry;\n        } else {\n            count += (leftPart + 1) * dp[i] + carry;\n        }\n\n        carry += digit * (10 ** (len - i - 1));\n    }\n\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}