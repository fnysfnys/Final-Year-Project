{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n    const dp = new Array(nums.length + 1).fill(false).map(() => new Array(targetSum + 1).fill(false));\n    dp[0][0] = true;\n\n    for (let i = 1; i <= nums.length; i++) {\n        for (let j = 1; j <= targetSum; j++) {\n            if (j >= nums[i - 1]) {\n                dp[i][j] = dp[i - 1][j] || dp[i - 1][j - nums[i - 1]];\n            } else {\n                dp[i][j] = dp[i - 1][j];\n            }\n        }\n    }\n\n    return dp[nums.length][targetSum];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n    const memo = new Array(nums.length).fill(null).map(() => new Array(targetSum + 1).fill(undefined));\n\n    function canPartitionHelper(index, target) {\n        if (target === 0) return true;\n        if (index < 0 || target < 0) return false;\n        if (memo[index][target] !== undefined) return memo[index][target];\n\n        memo[index][target] = canPartitionHelper(index - 1, target) || canPartitionHelper(index - 1, target - nums[index]);\n        return memo[index][target];\n    }\n\n    return canPartitionHelper(nums.length - 1, targetSum);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n\n    function canPartitionHelper(index, currentSum) {\n        if (currentSum === targetSum) return true;\n        if (index === nums.length) return false;\n\n        return canPartitionHelper(index + 1, currentSum + nums[index]) || canPartitionHelper(index + 1, currentSum);\n    }\n\n    return canPartitionHelper(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n\n    function backtrack(index, currentSum) {\n        if (currentSum === targetSum) return true;\n        if (index >= nums.length || currentSum > targetSum) return false;\n\n        return backtrack(index + 1, currentSum) || backtrack(index + 1, currentSum + nums[index]);\n    }\n\n    return backtrack(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n\n    function dfs(index, currentSum) {\n        if (currentSum === targetSum) return true;\n        if (index >= nums.length || currentSum > targetSum) return false;\n\n        return dfs(index + 1, currentSum) || dfs(index + 1, currentSum + nums[index]);\n    }\n\n    return dfs(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'targetSum' is assigned a value but never used.",
                    "line": 5,
                    "column": 11,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n    const n = nums.length;\n\n    const dp = new Array(1 << n).fill(false);\n    dp[0] = true;\n\n    for (let i = 0; i < (1 << n); i++) {\n        for (let j = 0; j < n; j++) {\n            if (i & (1 << j)) {\n                dp[i] = dp[i] || (dp[i ^ (1 << j)] && nums[j]);\n            }\n        }\n    }\n\n    return dp[(1 << n) - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                },
                {
                    "ruleId": "no-const-assign",
                    "severity": 2,
                    "message": "'dp' is constant.",
                    "line": 14,
                    "column": 9,
                    "nodeType": "Identifier",
                    "messageId": "const",
                    "endLine": 14,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n    const dp = new Set();\n    dp.add(0);\n\n    for (const num of nums) {\n        const newSet = new Set(dp);\n        for (const val of dp) {\n            newSet.add(val + num);\n        }\n        dp = newSet;\n    }\n\n    return dp.has(targetSum);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n    const dp = new Array(targetSum + 1).fill(false);\n    dp[0] = true;\n\n    for (const num of nums) {\n        for (let i = targetSum; i >= num; i--) {\n            dp[i] = dp[i] || dp[i - num];\n        }\n    }\n\n    return dp[targetSum];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n\n    function canPartitionHelper(index, currentSum) {\n        if (currentSum === targetSum) return true;\n        if (index >= nums.length) return false;\n\n        return canPartitionHelper(index + 1, currentSum + nums[index]) || canPartitionHelper(index + 1, currentSum);\n    }\n\n    return canPartitionHelper(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/partition-equal-subset-sum/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const sum = nums.reduce((acc, num) => acc + num, 0);\n    if (sum % 2 !== 0) return false;\n    \n    const targetSum = sum / 2;\n\n    function canPartitionHelper(index, currentSum) {\n        if (currentSum === targetSum) return true;\n        if (index >= nums.length || currentSum > targetSum) return false;\n\n        return canPartitionHelper(index + 1, currentSum) || canPartitionHelper(index + 1, currentSum + nums[index]);\n    }\n\n    return canPartitionHelper(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}