{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 16,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 16,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function* generatePascalsTriangleRow() {\n    let row = [1];\n    yield row;\n    \n    while (true) {\n        const newRow = [1];\n        for (let i = 1; i < row.length; i++) {\n            newRow.push(row[i - 1] + row[i]);\n        }\n        newRow.push(1);\n        row = newRow;\n        yield row;\n    }\n}\n\nvar getRow = function(rowIndex) {\n    const generator = generatePascalsTriangleRow();\n    for (let i = 0; i < rowIndex; i++) {\n        generator.next();\n    }\n    return generator.next().value;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    if (rowIndex === 0) return [1];\n    var row = [1];\n    for (var i = 1; i <= rowIndex; i++) {\n        var newRow = [1];\n        for (var j = 1; j < row.length; j++) {\n            newRow.push(row[j - 1] + row[j]);\n        }\n        newRow.push(1);\n        row = newRow;\n    }\n    return row;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    var triangle = generatePascalsTriangle(rowIndex + 1);\n    return triangle[rowIndex];\n};\n\nfunction generatePascalsTriangle(numRows) {\n    var triangle = [];\n    \n    for (var i = 0; i < numRows; i++) {\n        var row = [];\n        row[0] = 1;\n        for (var j = 1; j < i; j++) {\n            row[j] = triangle[i - 1][j - 1] + triangle[i - 1][j];\n        }\n        if (i > 0) {\n            row[i] = 1;\n        }\n        triangle.push(row);\n    }\n    \n    return triangle;\n}",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    var row = [1];\n    for (var i = 1; i <= rowIndex; i++) {\n        for (var j = i - 1; j >= 1; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n    return row;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    const memo = new Map();\n    \n    function generateRow(rowIndex) {\n        if (memo.has(rowIndex)) return memo.get(rowIndex);\n        \n        if (rowIndex === 0) {\n            return [1];\n        }\n        \n        const prevRow = generateRow(rowIndex - 1);\n        const newRow = [1];\n        \n        for (let i = 1; i < rowIndex; i++) {\n            newRow.push(prevRow[i - 1] + prevRow[i]);\n        }\n        \n        newRow.push(1);\n        memo.set(rowIndex, newRow);\n        return newRow;\n    }\n    \n    return generateRow(rowIndex);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    var row = [];\n    \n    for (var i = 0; i <= rowIndex; i++) {\n        row.push(1);\n        for (var j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n    }\n    \n    return row;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    var row = [];\n    var val = 1;\n    \n    for (var i = 0; i <= rowIndex; i++) {\n        row.push(val);\n        val = val * (rowIndex - i) / (i + 1);\n    }\n    \n    return row;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    if (rowIndex === 0) return [1];\n    if (rowIndex === 1) return [1, 1];\n    \n    var prevRow = getRow(rowIndex - 1);\n    var newRow = [1];\n    \n    for (var i = 1; i < rowIndex; i++) {\n        newRow.push(prevRow[i - 1] + prevRow[i]);\n    }\n    \n    newRow.push(1);\n    return newRow;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    var row = [];\n    \n    for (var i = 0; i <= rowIndex; i++) {\n        row.push(combination(rowIndex, i));\n    }\n    \n    return row;\n};\n\nfunction combination(n, k) {\n    if (k === 0 || k === n) return 1;\n    \n    var res = 1;\n    for (var i = 1; i <= k; i++) {\n        res = res * (n - i + 1) / i;\n    }\n    \n    return Math.round(res);\n}",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYPv2/model_outputs/chatgpt-3.5/parsed_outputs/pascals-triangle-ii/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'getRow' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 11
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var getRow = function(rowIndex) {\n    var row = new Array(rowIndex + 1).fill(0);\n    row[0] = 1;\n    \n    for (var i = 1; i <= rowIndex; i++) {\n        for (var j = i; j >= 1; j--) {\n            row[j] += row[j - 1];\n        }\n    }\n    \n    return row;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}