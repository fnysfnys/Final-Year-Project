{
    "Java": {
        "solution2": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution2.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 87).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "36",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "49",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "70",
                            "@severity": "error",
                            "@message": "Parameter previous should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "22",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        }
                    ]
                }
            }
        },
        "solution3": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution3.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "24",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 98).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        },
                        {
                            "@line": "24",
                            "@column": "37",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "24",
                            "@column": "50",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "24",
                            "@column": "71",
                            "@severity": "error",
                            "@message": "Parameter memo should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "25",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "30",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 89).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        }
                    ]
                }
            }
        },
        "solution4": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution4.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "13",
                            "@column": "26",
                            "@severity": "error",
                            "@message": "':' should be on a new line.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                        },
                        {
                            "@line": "23",
                            "@column": "25",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "23",
                            "@column": "38",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "23",
                            "@column": "59",
                            "@severity": "error",
                            "@message": "Parameter start should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "24",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "26",
                            "@severity": "error",
                            "@message": "Line has trailing spaces.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                        },
                        {
                            "@line": "28",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 82).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        },
                        {
                            "@line": "28",
                            "@column": "17",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        }
                    ]
                }
            }
        },
        "solution8": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution8.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "38",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "51",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "22",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "26",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 106).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        }
                    ]
                }
            }
        },
        "solution9": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution9.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "16",
                            "@column": "40",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "16",
                            "@column": "53",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "17",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "19",
                            "@severity": "error",
                            "@message": "Line has trailing spaces.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                        },
                        {
                            "@line": "20",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 126).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        }
                    ]
                }
            }
        },
        "solution5": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution5.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "6",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
                        },
                        {
                            "@line": "6",
                            "@column": "20",
                            "@severity": "error",
                            "@message": "Variable 'children' must be private and have accessor methods.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
                        },
                        {
                            "@line": "6",
                            "@column": "44",
                            "@severity": "error",
                            "@message": "'26' is a magic number.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "17",
                            "@severity": "error",
                            "@message": "Variable 'isWord' must be private and have accessor methods.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
                        },
                        {
                            "@line": "10",
                            "@column": "26",
                            "@severity": "error",
                            "@message": "Parameter root should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "10",
                            "@column": "41",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "37",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 88).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        },
                        {
                            "@line": "37",
                            "@column": "38",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "37",
                            "@column": "51",
                            "@severity": "error",
                            "@message": "Parameter root should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "37",
                            "@column": "66",
                            "@severity": "error",
                            "@message": "Parameter start should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "37",
                            "@column": "77",
                            "@severity": "error",
                            "@message": "Parameter count should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "40",
                            "@column": "13",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "42",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 122).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        }
                    ]
                }
            }
        },
        "solution6": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution6.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "9",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "23",
                            "@column": "25",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "23",
                            "@column": "38",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "24",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "30",
                            "@column": "13",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "33",
                            "@column": "21",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        }
                    ]
                }
            }
        },
        "solution10": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution10.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "33",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "21",
                            "@column": "46",
                            "@severity": "error",
                            "@message": "Parameter wordSet should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "22",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        }
                    ]
                }
            }
        },
        "solution7": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution7.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "7",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "20",
                            "@column": "46",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "20",
                            "@column": "62",
                            "@severity": "error",
                            "@message": "Parameter index should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "25",
                            "@severity": "error",
                            "@message": "Line is longer than 80 characters (found 82).",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                        },
                        {
                            "@line": "26",
                            "@column": "17",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        },
                        {
                            "@line": "28",
                            "@column": "17",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        }
                    ]
                }
            }
        },
        "solution1": {
            "checkstyle": {
                "@version": "10.12.7",
                "file": {
                    "@name": "/Users/gabrielturner/UCL/Year4/FYP/FYP/scripts/code_quality_metrics/../../model_outputs/chatgpt-4/parsed_outputs/concatenated-words/Java/solution1.java",
                    "error": [
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "File does not end with a newline.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"
                        },
                        {
                            "@line": "1",
                            "@severity": "error",
                            "@message": "Missing package-info.java file.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
                        },
                        {
                            "@line": "5",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Class 'Solution' looks like designed for extension (can be subclassed), but the method 'findAllConcatenatedWordsInADict' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solution' final or making the method 'findAllConcatenatedWordsInADict' static/final/abstract/empty, or adding allowed annotation for the method.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
                        },
                        {
                            "@line": "5",
                            "@column": "5",
                            "@severity": "error",
                            "@message": "Missing a Javadoc comment.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck"
                        },
                        {
                            "@line": "5",
                            "@column": "57",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "15",
                            "@column": "29",
                            "@severity": "error",
                            "@message": "Parameter word should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "15",
                            "@column": "42",
                            "@severity": "error",
                            "@message": "Parameter words should be final.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
                        },
                        {
                            "@line": "16",
                            "@column": "9",
                            "@severity": "error",
                            "@message": "'if' construct must use '{}'s.",
                            "@source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
                        }
                    ]
                }
            }
        }
    }
}