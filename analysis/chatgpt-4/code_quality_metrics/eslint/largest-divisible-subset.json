{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const memo = {};\n\n    function dfs(index, prev) {\n        if (index === nums.length) return [];\n        const key = `${index}-${prev}`;\n        if (memo[key]) return memo[key];\n\n        let include = [], exclude = dfs(index + 1, prev);\n        if (prev === -1 || nums[index] % prev === 0) {\n            include = [nums[index], ...dfs(index + 1, nums[index])];\n        }\n\n        memo[key] = include.length > exclude.length ? include : exclude;\n        return memo[key];\n    }\n\n    return dfs(0, -1);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const dp = Array(nums.length).fill(1);\n    const prev = Array(nums.length).fill(-1);\n    let maxIndex = 0;\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[i] % nums[j] === 0 && dp[i] < dp[j] + 1) {\n                dp[i] = dp[j] + 1;\n                prev[i] = j;\n            }\n        }\n        if (dp[i] > dp[maxIndex]) maxIndex = i;\n    }\n\n    const result = [];\n    while (maxIndex >= 0) {\n        result.unshift(nums[maxIndex]);\n        maxIndex = prev[maxIndex];\n    }\n    return result;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const memo = {};\n\n    function helper(index, prev) {\n        if (index === nums.length) return [];\n        const key = `${index}-${prev}`;\n        if (memo[key]) return memo[key];\n\n        let include = [];\n        let exclude = helper(index + 1, prev);\n        if (prev === -1 || nums[index] % prev === 0) {\n            include = [nums[index], ...helper(index + 1, nums[index])];\n        }\n\n        memo[key] = include.length > exclude.length ? include : exclude;\n        return memo[key];\n    }\n\n    return helper(0, -1);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    let result = [nums[0]];\n\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] % result[result.length - 1] === 0) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    const result = [];\n    const subset = [];\n    nums.sort((a, b) => a - b);\n\n    function backtrack(start) {\n        if (subset.length > result.length) {\n            result.length = 0;\n            result.push(...subset);\n        }\n\n        for (let i = start; i < nums.length; i++) {\n            if (subset.length === 0 || nums[i] % subset[subset.length - 1] === 0) {\n                subset.push(nums[i]);\n                backtrack(i + 1);\n                subset.pop();\n            }\n        }\n    }\n\n    backtrack(0);\n    return result;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const dp = new Map();\n    let maxSet = new Set();\n\n    for (const num of nums) {\n        let maxSubset = new Set();\n        for (const key of dp.keys()) {\n            if (num % key === 0 && dp.get(key).size > maxSubset.size) {\n                maxSubset = new Set(dp.get(key));\n            }\n        }\n        maxSubset.add(num);\n        dp.set(num, maxSubset);\n        if (maxSubset.size > maxSet.size) maxSet = maxSubset;\n    }\n\n    return Array.from(maxSet);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const dp = Array(nums.length).fill(0);\n    const parent = Array(nums.length).fill(0);\n    let maxSize = 0;\n    let maxVal = nums[0];\n\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i; j >= 0; j--) {\n            if (nums[i] % nums[j] === 0 && dp[j] + 1 > dp[i]) {\n                dp[i] = dp[j] + 1;\n                parent[i] = j;\n                if (dp[i] > maxSize) {\n                    maxSize = dp[i];\n                    maxVal = nums[i];\n                }\n            }\n        }\n    }\n\n    const result = [];\n    let k = nums.indexOf(maxVal);\n    while (k >= 0 && dp[k] > 0) {\n        result.unshift(nums[k]);\n        k = parent[k] === k ? -1 : parent[k];\n    }\n    return result;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const dp = Array(nums.length).fill(1);\n    let maxIndex = 0;\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[i] % nums[j] === 0 && dp[j] + 1 > dp[i]) {\n                dp[i] = dp[j] + 1;\n                if (dp[i] > dp[maxIndex]) maxIndex = i;\n            }\n        }\n    }\n\n    const result = [];\n    let temp = nums[maxIndex];\n    let currentDP = dp[maxIndex];\n    for (let i = maxIndex; i >= 0; i--) {\n        if (temp % nums[i] === 0 && dp[i] === currentDP) {\n            result.unshift(nums[i]);\n            temp = nums[i];\n            currentDP--;\n        }\n    }\n    return result;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    const stack = [[0, []]];\n    let maxSubset = [];\n\n    while (stack.length) {\n        const [index, subset] = stack.pop();\n        if (index === nums.length) {\n            if (subset.length > maxSubset.length) maxSubset = subset.slice();\n            continue;\n        }\n        stack.push([index + 1, subset.slice()]);\n        if (subset.length === 0 || nums[index] % subset[subset.length - 1] === 0) {\n            subset.push(nums[index]);\n            stack.push([index + 1, subset]);\n        }\n    }\n    return maxSubset;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/largest-divisible-subset/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'largestDivisibleSubset' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var largestDivisibleSubset = function(nums) {\n    nums.sort((a, b) => a - b);\n    let bestSubset = [];\n\n    function isSubsetValid(subset) {\n        for (let i = 0; i < subset.length; i++) {\n            for (let j = i + 1; j < subset.length; j++) {\n                if (subset[j] % subset[i] !== 0 && subset[i] % subset[j] !== 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    function findSubsets(index, currentSubset) {\n        if (index === nums.length) {\n            if (currentSubset.length > bestSubset.length && isSubsetValid(currentSubset)) {\n                bestSubset = currentSubset.slice();\n            }\n            return;\n        }\n        currentSubset.push(nums[index]);\n        findSubsets(index + 1, currentSubset);\n        currentSubset.pop();\n        findSubsets(index + 1, currentSubset);\n    }\n\n    findSubsets(0, []);\n    return bestSubset;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}