{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    if (!nums.length) return 0;\n    const dp = Array(nums.length).fill(1);\n    let maxLen = 1;\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[i] > nums[j]) {\n                dp[i] = Math.max(dp[i], dp[j] + 1);\n            }\n        }\n        maxLen = Math.max(maxLen, dp[i]);\n    }\n\n    return maxLen;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    if (nums.length === 0) return 0;\n    const dp = Array(nums.length).fill(1);\n    let max = 1;\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[i] > nums[j]) {\n                dp[i] = Math.max(dp[i], dp[j] + 1);\n            }\n        }\n        max = Math.max(max, dp[i]);\n    }\n\n    return max;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    function dfs(index, prev) {\n        if (index === nums.length) return 0;\n\n        let include = 0;\n        if (prev === -1 || nums[index] > nums[prev]) {\n            include = 1 + dfs(index + 1, index);\n        }\n        let exclude = dfs(index + 1, prev);\n\n        return Math.max(include, exclude);\n    }\n\n    return dfs(0, -1);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const dp = [];\n    for (let num of nums) {\n        let low = 0, high = dp.length;\n        while (low < high) {\n            const mid = (low + high) >> 1;\n            if (dp[mid] < num) low = mid + 1;\n            else high = mid;\n        }\n        dp[low] = num;\n    }\n    return dp.length;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const memo = Array(nums.length).fill(-1);\n\n    function lis(index, prevIndex) {\n        if (index === nums.length) return 0;\n        if (memo[index] !== -1 && prevIndex < memo[index]) return memo[index];\n\n        let taken = 0;\n        if (prevIndex < 0 || nums[index] > nums[prevIndex]) {\n            taken = 1 + lis(index + 1, index);\n        }\n        const notTaken = lis(index + 1, prevIndex);\n\n        memo[index] = Math.max(taken, notTaken);\n        return memo[index];\n    }\n\n    return lis(0, -1);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const dp = Array(nums.length).fill(1);\n    let maxLength = 1;\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[i] > nums[j]) {\n                dp[i] = Math.max(dp[i], dp[j] + 1);\n            }\n        }\n        maxLength = Math.max(maxLength, dp[i]);\n    }\n\n    return maxLength;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const sub = [];\n    for (const num of nums) {\n        let i = 0, j = sub.length;\n        while (i !== j) {\n            const mid = Math.floor((i + j) / 2);\n            if (sub[mid] < num) {\n                i = mid + 1;\n            } else {\n                j = mid;\n            }\n        }\n        if (i === sub.length) sub.push(num);\n        else sub[i] = num;\n    }\n    return sub.length;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const tails = [];\n    for (const num of nums) {\n        let i = 0, j = tails.length;\n        while (i < j) {\n            const m = Math.floor((i + j) / 2);\n            if (tails[m] < num) {\n                i = m + 1;\n            } else {\n                j = m;\n            }\n        }\n        tails[i] = num;\n        if (i === tails.length) tails.push(num);\n    }\n    return tails.length;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const dp = Array(nums.length).fill(1);\n    let maxLen = 1;\n\n    for (let i = 1; i < nums.length; i++) {\n        let changed = false;\n        for (let j = 0; j < i; j++) {\n            if (nums[i] > nums[j] && dp[j] + 1 > dp[i]) {\n                dp[i] = dp[j] + 1;\n                changed = true;\n            }\n        }\n        if (changed) maxLen = Math.max(maxLen, dp[i]);\n    }\n\n    return maxLen;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/longest-increasing-subsequence/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'lengthOfLIS' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var lengthOfLIS = function(nums) {\n    const dp = Array(nums.length).fill(1);\n\n    for (let i = 1; i < nums.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (nums[j] < nums[i]) {\n                dp[i] = Math.max(dp[i], dp[j] + 1);\n            }\n        }\n    }\n\n    return Math.max(...dp);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}