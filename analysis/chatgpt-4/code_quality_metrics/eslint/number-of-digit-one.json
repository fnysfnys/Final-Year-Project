{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    let count = 0, factor = 1, r = 1;\n    while (n > 0) {\n        count += Math.floor(n / 10) * factor;\n        if (n % 10 > 1) count += factor;\n        if (n % 10 === 1) count += r;\n        r += n % 10 * factor;\n        factor *= 10;\n        n = Math.floor(n / 10);\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        let str = i.toString();\n        for (let char of str) {\n            if (char === '1') count++;\n        }\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n * Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n */\nvar countDigitOne = function(n) {\n    let dp = new Array(n + 1).fill(0);\n    for (let i = 1; i <= n; i++) {\n        dp[i] = dp[Math.floor(i / 10)] + (i % 10 === 1 ? 1 : 0);\n    }\n    return dp.reduce((a, b) => a + b, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    return Array.from({length: n + 1}, (_, i) => i).join('').match(/1/g)?.length || 0;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    if (n <= 0) return 0;\n    if (n < 10) return 1;\n    let strN = n.toString();\n    let firstDigit = parseInt(strN[0]);\n    let remainder = parseInt(strN.substr(1));\n    let count = countDigitOne(remainder);\n    if (firstDigit === 1) count += remainder + 1;\n    else count += Math.pow(10, strN.length - 1);\n    return count + countDigitOne(Math.pow(10, strN.length - 1) - 1) * firstDigit;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    let count = 0, multiplier = 1, next = n;\n    while (next > 0) {\n        let digit = next % 10;\n        let roundDown = Math.floor(n / (multiplier * 10)) * multiplier;\n        let roundUp = digit === 1 ? (n % multiplier) + 1 : 0;\n        count += roundDown + roundUp;\n        next = Math.floor(next / 10);\n        multiplier *= 10;\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    return Array(n + 1).fill().map((_, i) => i)\n            .reduce((acc, num) => acc + num.toString().split('1').length - 1, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 0; i <= n; i++) {\n        count += (i.toString().match(/1/g) || []).length;\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    if (n <= 0) return 0;\n    if (n < 10) return 1;\n    let lastDigit = n % 10;\n    let rest = Math.floor(n / 10);\n    return countDigitOne(rest) * 10 + countDigitOne(lastDigit) + (lastDigit >= 1 ? rest + 1 : 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/number-of-digit-one/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countDigitOne' is assigned a value but never used.",
                    "line": 4,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 4,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "/**\n* Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n*/\nvar countDigitOne = function(n) {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += i.toString().split('').filter(c => c === '1').length;\n    }\n    return count;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}