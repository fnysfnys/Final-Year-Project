{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let sum = nums.reduce((a, b) => a + b, 0);\n    if (sum & 1) return false;\n    \n    let bitset = new Uint32Array((sum >> 5) + 1);\n    bitset[0] = 1;\n    \n    for (let num of nums) {\n        let copy = bitset.slice();\n        for (let i = 0; i < bitset.length; i++) {\n            bitset[i] |= copy[i] << num;\n        }\n    }\n\n    return !!(bitset[sum >> 1] & (1 << ((sum >> 1) & 31)));\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let totalSum = nums.reduce((acc, curr) => acc + curr, 0);\n    if (totalSum % 2 !== 0) return false;\n    let target = totalSum / 2;\n\n    function canFindSubset(index, sum) {\n        if (sum === target) return true;\n        if (sum > target || index < 0) return false;\n        return canFindSubset(index - 1, sum + nums[index]) || canFindSubset(index - 1, sum);\n    }\n\n    return canFindSubset(nums.length - 1, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    const total = nums.reduce((sum, num) => sum + num, 0);\n    if (total % 2 !== 0) return false;\n    const target = total / 2;\n    const memo = new Map();\n\n    function dfs(i, currentSum) {\n        if (currentSum === target) return true;\n        if (currentSum > target || i >= nums.length) return false;\n        const key = `${i}:${currentSum}`;\n        if (memo.has(key)) return memo.get(key);\n\n        const result = dfs(i + 1, currentSum + nums[i]) || dfs(i + 1, currentSum);\n        memo.set(key, result);\n        return result;\n    }\n\n    return dfs(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let total = nums.reduce((acc, val) => acc + val, 0);\n    if (total % 2 !== 0) return false;\n    let target = total / 2;\n    \n    let dp = new Array(target + 1).fill(false);\n    dp[0] = true;\n    \n    for (let num of nums) {\n        for (let j = target; j >= num; j--) {\n            if (dp[j - num]) dp[j] = true;\n        }\n    }\n\n    return dp[target];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let sum = nums.reduce((a, b) => a + b, 0);\n    if (sum % 2 !== 0) return false;\n    let target = sum / 2;\n    let dp = Array(target + 1).fill(false);\n    dp[0] = true;\n\n    for (let num of nums) {\n        for (let i = target; i >= num; i--) {\n            dp[i] = dp[i] || dp[i - num];\n        }\n    }\n\n    return dp[target];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    nums.sort((a, b) => b - a);\n    let sum = nums.reduce((acc, val) => acc + val, 0);\n    if (sum % 2 !==\n\n 0) return false;\n    let target = sum / 2, subsetSum = 0;\n\n    for (let num of nums) {\n        subsetSum += num;\n        if (subsetSum === target) return true;\n        if (subsetSum > target) return false;\n    }\n\n    return false;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let sum = nums.reduce((acc, val) => acc + val, 0);\n    if (sum % 2 != 0) return false;\n    let halfSum = sum / 2;\n\n    function search(index, currentSum) {\n        if (currentSum == halfSum) return true;\n        if (currentSum > halfSum || index == nums.length) return false;\n        return search(index + 1, currentSum + nums[index]) || search(index + 1, currentSum);\n    }\n\n    return search(0, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let totalSum = nums.reduce((acc, curr) => acc + curr, 0);\n    if (totalSum % 2 !== 0) return false;\n    let target = totalSum / 2;\n    let memo = new Map();\n\n    function dp(index, currentSum) {\n        if (currentSum === target) return true;\n        if (currentSum > target || index < 0) return false;\n        let key = `${index}:${currentSum}`;\n        if (memo.has(key)) return memo.get(key);\n\n        let result = dp(index - 1, currentSum + nums[index]) || dp(index - 1, currentSum);\n        memo.set(key, result);\n        return result;\n    }\n\n    return dp(nums.length - 1, 0);\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let sum = nums.reduce((acc, curr) => acc + curr, 0);\n    if (sum % 2 !== 0) return false;\n    let target = sum / 2;\n\n    let dp = Array(target + 1).fill(false);\n    dp[0] = true;\n\n    for (let num of nums) {\n        for (let i = target; i >= num; i--) {\n            dp[i] = dp[i] || dp[i - num];\n            if (dp[target]) return true;\n        }\n    }\n\n    return dp[target];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/partition-equal-subset-sum/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canPartition' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var canPartition = function(nums) {\n    let totalSum = nums.reduce((acc, curr) => acc + curr, 0);\n    if (totalSum % 2 !== 0) return false;\n    let target = totalSum / 2;\n    let sums = new Set([0]);\n\n    for (let num of nums) {\n        let newSums = new Set(sums);\n        for (let sum of sums) {\n            newSums.add(sum + num);\n        }\n        sums = newSums;\n        if (sums.has(target)) return true;\n    }\n\n    return false;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}