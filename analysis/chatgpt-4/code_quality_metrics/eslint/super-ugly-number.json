{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let memo = {};\n\n    function helper(m) {\n        if (m in memo) return memo[m];\n        if (m === 1) return 1;\n\n        let minUgly = Infinity;\n        for (let prime of primes) {\n            if (m % prime === 0) {\n                minUgly = Math.min(minUgly, helper(m / prime));\n            }\n        }\n\n        memo[m] = minUgly;\n        return minUgly;\n    }\n\n    let count = 0, num = 1;\n    while (count < n) {\n        if (helper(num) === 1) count++;\n        num++;\n    }\n\n    return num - 1;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let dp = new Array(n);\n    let indices = new Array(primes.length).fill(0);\n    dp[0] = 1;\n\n    for (let i = 1; i < n; i++) {\n        dp[i] = Math.min(...indices.map((index, idx) => primes[idx] * dp[index]));\n\n        indices.forEach((index, idx) => {\n            if (primes[idx] * dp[index] === dp[i]) {\n                indices[idx]++;\n            }\n        });\n    }\n\n    return dp[n - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let uglyNumbers = [1];\n    let count = 1;\n    let next = 2;\n\n    while (count < n) {\n        let isUgly = primes.some(prime => {\n            let temp = next;\n            while (temp % prime === 0) temp /= prime;\n            return temp === 1;\n        });\n\n        if (isUgly) {\n            uglyNumbers.push(next);\n            count++;\n        }\n        next++;\n    }\n\n    return uglyNumbers[n - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let dp = [1];\n    let pointers = primes.map(() => 0);\n\n    for (let i = 1; i < n; i++) {\n        let min = Math.min(...primes.map((p, j) => p * dp[pointers[j]]));\n        dp[i] = min;\n\n        primes.forEach((p, j) => {\n            if (min === p * dp[pointers[j]]) pointers[j]++;\n        });\n    }\n\n    return dp[n - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'MinHeap' is not defined.",
                    "line": 3,
                    "column": 20,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 3,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let uglyNumbers = new Set([1]);\n    let heap = new MinHeap();\n    heap.push(1);\n\n    while (uglyNumbers.size < n) {\n        let current = heap.pop();\n        primes.forEach(prime => uglyNumbers.add(current * prime));\n        uglyNumbers.forEach(num => heap.push(num));\n    }\n\n    return [...uglyNumbers][n - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let queues = primes.map(prime => [prime]);\n    let ugly = 1;\n\n    for (let i = 1; i < n; i++) {\n        ugly = Math.min(...queues.map(q => q[0]));\n        queues.forEach(queue => {\n            if (queue[0] === ugly) {\n                queue.shift();\n                queue.push(ugly * primes[queues.indexOf(queue)]);\n            }\n        });\n    }\n\n    return ugly;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let uglyNumbers = [1];\n\n    for (let i = 1; i < n; i++) {\n        let candidates = primes.map(prime => prime * uglyNumbers[uglyNumbers.length - 1]);\n        uglyNumbers.push(Math.min(...candidates));\n        uglyNumbers = Array.from(new Set(uglyNumbers)).sort((a, b) => a - b);\n\n\n    }\n\n    return uglyNumbers[n - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let heap = new MinHeap();\n    heap.push(1);\n    let number, prev;\n\n    for (let i = 0; i < n; i++) {\n        number = heap.pop();\n\n        if (number !== prev) {\n            primes.forEach(prime => {\n                heap.push(number * prime);\n            });\n        }\n\n        prev = number;\n    }\n\n    return number;\n};\n\nclass MinHeap {\n    // Implementation of a basic MinHeap\n}",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let left = 1, right = Math.max(...primes) * n;\n\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        let count = primes.reduce((total, prime) => total + Math.floor(mid / prime), 0);\n\n        if (count < n) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n\n    return left;\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/chatgpt-4/parsed_outputs/super-ugly-number/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'nthSuperUglyNumber' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 23
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var nthSuperUglyNumber = function(n, primes) {\n    let generated = [1];\n    let indices = primes.map(() => 0);\n\n    while (generated.length < n) {\n        let nextUgly = Math.min(...primes.map((prime, i) => prime * generated[indices[i]]));\n        primes.forEach((prime, i) => {\n            if (nextUgly === prime * generated[indices[i]]) indices[i]++;\n        });\n        generated.push(nextUgly);\n    }\n\n    return generated[n - 1];\n};",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}