{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/coin-change/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function coinChange(coins, amount) {\n   let hash = {};\n   for (let i = 0; i < coins.length; i++) {\n       hash[coins[i]] = 0;\n   }\n   for (let i = 1; i <= amount; i++) {\n       for (let j = 0; j < coins.length; j++) {\n           if (i >= coins[j]) {\n               hash[i] = Math.min(hash[i], hash[i - coins[j]] + 1);\n           }\n       }\n   }\n   return hash[amount] === Infinity ? -1 : hash[amount];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/coin-change/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function coinChange(coins, amount) {\n   let minCoins = Infinity;\n   for (let i = 0; i < coins.length; i++) {\n       let numCoins = Math.floor(amount / coins[i]);\n       if (numCoins < minCoins) {\n           minCoins = numCoins;\n       }\n   }\n   return minCoins === Infinity ? -1 : minCoins;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/coin-change/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function coinChange(coins, amount) {\n   let dp = new Array(amount + 1).fill(Infinity);\n   dp[0] = 0;\n   for (let i = 1; i <= amount; i++) {\n       for (let j = 0; j < coins.length; j++) {\n           if (i >= coins[j]) {\n               dp[i] = Math.min(dp[i], dp[i - coins[j]] + 1);\n           }\n       }\n   }\n   return dp[amount] === Infinity ? -1 : dp[amount];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/coin-change/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function coinChange(coins, amount, minCoins = Infinity) {\n   if (amount === 0) {\n       return minCoins;\n   }\n   for (let i = 0; i < coins.length; i++) {\n       let numCoins = Math.floor(amount / coins[i]);\n       if (numCoins < minCoins) {\n           minCoins = numCoins;\n       }\n   }\n   return minCoins === Infinity ? -1 : minCoins;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}