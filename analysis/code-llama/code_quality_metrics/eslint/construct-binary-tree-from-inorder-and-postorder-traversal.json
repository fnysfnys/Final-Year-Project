{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 10,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 10,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n return buildTreeHelper(inorder, postorder, 0, inorder.length - 1);\n}\n\nfunction buildTreeHelper(inorder, postorder, start, end) {\n if (start > end) {\n   return null;\n }\n\n const root = new TreeNode(postorder.pop());\n const inorderRootIndex = inorder.indexOf(root.val);\n\n root.left = buildTreeHelper(inorder, postorder, start, inorderRootIndex - 1);\n root.right = buildTreeHelper(inorder, postorder, inorderRootIndex + 1, end);\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 6,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 6,
                    "endColumn": 27
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n if (inorder.length === 0) {\n   return null;\n }\n\n const root = new TreeNode(postorder.pop());\n const inorderRootIndex = inorder.indexOf(root.val);\n\n root.left = buildTree(inorder.slice(0, inorderRootIndex), postorder.slice(0, inorderRootIndex));\n root.right = buildTree(inorder.slice(inorderRootIndex + 1), postorder.slice(inorderRootIndex + 1));\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 3,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 3,
                    "endColumn": 27
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 11,
                    "column": 22,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 11,
                    "endColumn": 30
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 16,
                    "column": 23,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 16,
                    "endColumn": 31
                }
            ],
            "suppressedMessages": [],
            "errorCount": 4,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n const queue = [];\n const root = new TreeNode(postorder.pop());\n queue.push(root);\n\n while (queue.length > 0) {\n   const node = queue.shift();\n   const inorderRootIndex = inorder.indexOf(node.val);\n\n   if (inorderRootIndex > 0) {\n     node.left = new TreeNode(postorder.pop());\n     queue.push(node.left);\n   }\n\n   if (inorderRootIndex < inorder.length - 1) {\n     node.right = new TreeNode(postorder.pop());\n     queue.push(node.right);\n   }\n }\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 3,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 3,
                    "endColumn": 27
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 7,
                    "column": 21,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 7,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 3,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n const hash = {};\n const root = new TreeNode(postorder.pop());\n hash[root.val] = root;\n\n while (postorder.length > 0) {\n   const node = new TreeNode(postorder.pop());\n   const inorderRootIndex = inorder.indexOf(node.val);\n\n   if (inorderRootIndex > 0) {\n     node.left = hash[postorder[inorderRootIndex - 1]];\n     hash[node.val] = node.left;\n   }\n\n   if (inorderRootIndex < inorder.length - 1) {\n     node.right = hash[postorder[inorderRootIndex + 1]];\n     hash[node.val] = node.right;\n   }\n }\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'start' is defined but never used.",
                    "line": 5,
                    "column": 46,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 51
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'end' is defined but never used.",
                    "line": 5,
                    "column": 53,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 56
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 7,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 7,
                    "endColumn": 27
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 11,
                    "column": 21,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 11,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 5,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n return buildTreeHelper(inorder, postorder, 0, inorder.length - 1);\n}\n\nfunction buildTreeHelper(inorder, postorder, start, end) {\n const hash = {};\n const root = new TreeNode(postorder.pop());\n hash[root.val] = root;\n\n while (postorder.length > 0) {\n   const node = new TreeNode(postorder.pop());\n   const inorderRootIndex = inorder.indexOf(node.val);\n\n   if (inorderRootIndex > 0) {\n     node.left = hash[postorder[inorderRootIndex - 1]];\n     hash[node.val] = node.left;\n   }\n\n   if (inorderRootIndex < inorder.length - 1) {\n     node.right = hash[postorder[inorderRootIndex + 1]];\n     hash[node.val] = node.right;\n   }\n }\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'start' is defined but never used.",
                    "line": 5,
                    "column": 46,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 51
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'end' is defined but never used.",
                    "line": 5,
                    "column": 53,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 56
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 7,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 7,
                    "endColumn": 27
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 15,
                    "column": 22,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 15,
                    "endColumn": 30
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 20,
                    "column": 23,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 20,
                    "endColumn": 31
                }
            ],
            "suppressedMessages": [],
            "errorCount": 6,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n return buildTreeHelper(inorder, postorder, 0, inorder.length - 1);\n}\n\nfunction buildTreeHelper(inorder, postorder, start, end) {\n const stack = [];\n const root = new TreeNode(postorder.pop());\n stack.push(root);\n\n while (stack.length > 0) {\n   const node = stack.pop();\n   const inorderRootIndex = inorder.indexOf(node.val);\n\n   if (inorderRootIndex > 0) {\n     node.left = new TreeNode(postorder.pop());\n     stack.push(node.left);\n   }\n\n   if (inorderRootIndex < inorder.length - 1) {\n     node.right = new TreeNode(postorder.pop());\n     stack.push(node.right);\n   }\n }\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 3,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 3,
                    "endColumn": 27
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 11,
                    "column": 22,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 11,
                    "endColumn": 30
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 16,
                    "column": 23,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 16,
                    "endColumn": 31
                }
            ],
            "suppressedMessages": [],
            "errorCount": 4,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n const stack = [];\n const root = new TreeNode(postorder.pop());\n stack.push(root);\n\n while (stack.length > 0) {\n   const node = stack.pop();\n   const inorderRootIndex = inorder.indexOf(node.val);\n\n   if (inorderRootIndex > 0) {\n     node.left = new TreeNode(postorder.pop());\n     stack.push(node.left);\n   }\n\n   if (inorderRootIndex < inorder.length - 1) {\n     node.right = new TreeNode(postorder.pop());\n     stack.push(node.right);\n   }\n }\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/construct-binary-tree-from-inorder-and-postorder-traversal/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'buildTree' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 19
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'start' is defined but never used.",
                    "line": 5,
                    "column": 46,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 51
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'end' is defined but never used.",
                    "line": 5,
                    "column": 53,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 5,
                    "endColumn": 56
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 7,
                    "column": 19,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 7,
                    "endColumn": 27
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 15,
                    "column": 22,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 15,
                    "endColumn": 30
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'TreeNode' is not defined.",
                    "line": 20,
                    "column": 23,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 20,
                    "endColumn": 31
                }
            ],
            "suppressedMessages": [],
            "errorCount": 6,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function buildTree(inorder, postorder) {\n return buildTreeHelper(inorder, postorder, 0, inorder.length - 1);\n}\n\nfunction buildTreeHelper(inorder, postorder, start, end) {\n const queue = [];\n const root = new TreeNode(postorder.pop());\n queue.push(root);\n\n while (queue.length > 0) {\n   const node = queue.shift();\n   const inorderRootIndex = inorder.indexOf(node.val);\n\n   if (inorderRootIndex > 0) {\n     node.left = new TreeNode(postorder.pop());\n     queue.push(node.left);\n   }\n\n   if (inorderRootIndex < inorder.length - 1) {\n     node.right = new TreeNode(postorder.pop());\n     queue.push(node.right);\n   }\n }\n\n return root;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}