{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   let count = 0;\n   for (let i = 0; i < 10 ** n; i++) {\n       let digits = i.toString().split('');\n       let uniqueDigits = new Map();\n       for (let j = 0; j < digits.length; j++) {\n           if (!uniqueDigits.has(digits[j])) {\n               uniqueDigits.set(digits[j], 1);\n           }\n       }\n       if (uniqueDigits.size === digits.length) {\n           count++;\n       }\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   let count = 0;\n   for (let i = 0; i < 10 ** n; i++) {\n       let digits = i.toString().split('');\n       if (new Set(digits).size === digits.length) {\n           count++;\n       }\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   let count = 0;\n   for (let i = 0; i < 10 ** n; i++) {\n       let digits = i.toString().split('');\n       let uniqueDigits = [];\n       for (let j = 0; j < digits.length; j++) {\n           if (!uniqueDigits.includes(digits[j])) {\n               uniqueDigits.push(digits[j]);\n           }\n       }\n       if (uniqueDigits.length === digits.length) {\n           count++;\n       }\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   let count = 0;\n   for (let i = 0; i < 10 ** n; i++) {\n       let digits = i.toString().split('');\n       let uniqueDigits = new Set(digits);\n       if (uniqueDigits.size === digits.length) {\n           count++;\n       }\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   let count = 0;\n   for (let i = 0; i < 10 ** n; i++) {\n       let digits = i.toString().split('');\n       let uniqueDigits = 0;\n       for (let j = 0; j < digits.length; j++) {\n           uniqueDigits |= 1 << digits[j];\n       }\n       if (uniqueDigits === (1 << digits.length) - 1) {\n           count++;\n       }\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   let count = 0;\n   for (let i = 0; i < 10 ** n; i++) {\n       let digits = i.toString().split('');\n       let uniqueDigits = new RegExp('^[0-9]{' + digits.length + '}$').test(digits.join(''));\n       if (uniqueDigits) {\n           count++;\n       }\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n   if (n === 0) {\n       return 1;\n   }\n   let count = 0;\n   for (let i = 0; i < 10; i++) {\n       count += countNumbersWithUniqueDigits(n - 1);\n   }\n   return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}