{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                },
                {
                    "ruleId": "no-const-assign",
                    "severity": 2,
                    "message": "'lastStone' is constant.",
                    "line": 8,
                    "column": 8,
                    "nodeType": "Identifier",
                    "messageId": "const",
                    "endLine": 8,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const lastStone = stones[stones.length - 1];\n   for (let i = stones.length - 2; i >= 0; i--) {\n       const mid = Math.floor((stones[i] + lastStone) / 2);\n       if (stones[i] - mid > 1) {\n           return false;\n       }\n       lastStone = mid;\n   }\n   return true;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   for (let i = 1; i < stones.length; i++) {\n       if (stones[i] - stones[i - 1] > 1) {\n           return false;\n       }\n   }\n   return true;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution10": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution10.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const queue = [stones[0]];\n   while (queue.length > 0) {\n       const stone = queue.shift();\n       if (stone === stones[stones.length - 1]) {\n           return true;\n       }\n       for (let i = 0; i < stones.length; i++) {\n           if (stones[i] - stone > 1) {\n               continue;\n           }\n           queue.push(stones[i]);\n       }\n   }\n   return false;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                },
                {
                    "ruleId": "no-const-assign",
                    "severity": 2,
                    "message": "'lastStone' is constant.",
                    "line": 7,
                    "column": 8,
                    "nodeType": "Identifier",
                    "messageId": "const",
                    "endLine": 7,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const lastStone = stones[stones.length - 1];\n   for (let i = stones.length - 2; i >= 0; i--) {\n       if (stones[i] - lastStone > 1) {\n           return false;\n       }\n       lastStone = stones[i];\n   }\n   return true;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const dp = new Array(stones.length).fill(false);\n   dp[0] = true;\n   for (let i = 1; i < stones.length; i++) {\n       for (let j = 0; j < i; j++) {\n           if (stones[i] - stones[j] <= 1) {\n               dp[i] = true;\n               break;\n           }\n       }\n   }\n   return dp[stones.length - 1];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const mid = Math.floor(stones.length / 2);\n   const left = stones.slice(0, mid);\n   const right = stones.slice(mid);\n   return canCross(left) && canCross(right);\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   if (stones.length === 1) {\n       return true;\n   }\n   const lastStone = stones[stones.length - 1];\n   const previousStone = stones[stones.length - 2];\n   if (lastStone - previousStone > 1) {\n       return false;\n   }\n   return canCross(stones.slice(0, -1));\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution9": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution9.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                },
                {
                    "ruleId": "no-const-assign",
                    "severity": 2,
                    "message": "'lastStone' is constant.",
                    "line": 8,
                    "column": 8,
                    "nodeType": "Identifier",
                    "messageId": "const",
                    "endLine": 8,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const sortedStones = stones.slice().sort((a, b) => a - b);\n   const lastStone = sortedStones[sortedStones.length - 1];\n   for (let i = sortedStones.length - 2; i >= 0; i--) {\n       if (sortedStones[i] - lastStone > 1) {\n           return false;\n       }\n       lastStone = sortedStones[i];\n   }\n   return true;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/code-llama/parsed_outputs/frog-jump/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'canCross' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 18
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'memo' is assigned a value but never used.",
                    "line": 2,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 2,
                    "endColumn": 14
                },
                {
                    "ruleId": "no-const-assign",
                    "severity": 2,
                    "message": "'lastStone' is constant.",
                    "line": 8,
                    "column": 8,
                    "nodeType": "Identifier",
                    "messageId": "const",
                    "endLine": 8,
                    "endColumn": 17
                }
            ],
            "suppressedMessages": [],
            "errorCount": 3,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function canCross(stones) {\n   const memo = new Map();\n   const lastStone = stones[stones.length - 1];\n   for (let i = stones.length - 2; i >= 0; i--) {\n       if (stones[i] - lastStone > 1) {\n           return false;\n       }\n       lastStone = stones[i];\n   }\n   return true;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}