{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/arithmetic-slices-ii-subsequence/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numberOfArithmeticSlices' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numberOfArithmeticSlices = function(nums) {\n  const map = new Map();\n  let res = 0;\n\n  for (const num of nums) {\n    if (map.has(num - nums[0])) {\n      res += map.get(num - nums[0]);\n    }\n    map.set(num, (map.get(num) || 0) + 1);\n  }\n\n  return res;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/arithmetic-slices-ii-subsequence/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numberOfArithmeticSlices' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numberOfArithmeticSlices = function(nums) {\n  if (nums.length < 3) return 0;\n\n  const dp = Array(nums.length).fill(0);\n  let res = 0;\n\n  for (let i = 2; i < nums.length; i++) {\n    if (nums[i] - nums[i - 1] === nums[i - 1] - nums[i - 2]) {\n      dp[i] = dp[i - 1] + 1;\n    }\n    res += dp[i];\n  }\n\n  return res;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/arithmetic-slices-ii-subsequence/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numberOfArithmeticSlices' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numberOfArithmeticSlices = function(nums) {\n  let res = 0;\n  let left = 0, right = 2;\n\n  while (right < nums.length) {\n    const prevDiff = nums[right - 1] - nums[right - 2];\n    const curDiff = nums[right] - nums[right - 1];\n\n    if (prevDiff !== curDiff) {\n      const len = right - left;\n      res += len * (len - 1) / 2;\n      left = right - 1;\n    }\n\n    right++;\n  }\n\n  const len = right - left;\n  res += len * (len - 1) / 2;\n\n  return res;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/arithmetic-slices-ii-subsequence/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numberOfArithmeticSlices' is assigned a value but never used.",
                    "line": 3,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 3,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "const memo = {};\n\nvar numberOfArithmeticSlices = function(nums, i = 0, diff = null) {\n  if (i >= nums.length) return 0;\n\n  const key = i + \"_\" + diff;\n  if (memo[key] !== undefined) return memo[key];\n\n  let res = 0;\n  if (diff !== null) {\n    res += numberOfArithmeticSlices(nums, i + 1, diff);\n  }\n\n  res += numberOfArithmeticSlices(nums, i + 1, nums[i + 1] - nums[i]);\n  memo[key] = res;\n\n  return res;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/arithmetic-slices-ii-subsequence/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numberOfArithmeticSlices' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numberOfArithmeticSlices = function(nums) {\n  const set = new Set();\n  let res = 0;\n  const diff = nums[1] - nums[0];\n\n  for (const num of nums) {\n    const prevNum = num - diff;\n    if (set.has(prevNum)) {\n      res += set.size;\n    }\n    set.add(num);\n  }\n\n  return res;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/arithmetic-slices-ii-subsequence/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numberOfArithmeticSlices' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 29
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numberOfArithmeticSlices = function(nums) {\n  let res = 0;\n\n  for (let i = 0; i < nums.length - 2; i++) {\n    const diff = nums[i + 1] - nums[i];\n    for (let j = i + 2; j < nums.length; j++) {\n      if (nums[j] - nums[j - 1] !== diff) break;\n      res++;\n    }\n  }\n\n  return res;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}