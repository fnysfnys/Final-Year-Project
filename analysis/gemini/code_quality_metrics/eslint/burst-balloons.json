{
    "JavaScript": {
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/burst-balloons/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxCoins' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 13
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxCoins = function(nums) {\n  const n = nums.length;\n  const dp = Array(n + 2).fill(-Infinity); // Padded for boundary handling\n  for (let i = 1; i <= n; i++) {\n    dp[i] = nums[i - 1];\n  }\n\n  const memo = {};\n  function solve(left, right) {\n    if (left > right) return 0;\n    if (memo[`${left}-${right}`]) return memo[`${left}-${right}`];\n\n    let max = 0;\n    for (let i = left; i <= right; i++) {\n      const burst = dp[left - 1] * dp[i] * dp[right + 1];\n      const leftSum = solve(left, i - 1);\n      const rightSum = solve(i + 1, right);\n      max = Math.max(max, burst + leftSum + rightSum);\n    }\n    memo[`${left}-${right}`] = max;\n    return max;\n  }\n\n  return solve(1, n);\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/burst-balloons/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxCoins' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 13
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxCoins = function(nums) {\n  const n = nums.length;\n  const dp = Array(n + 2).fill(0); // Padded for boundary handling\n  for (let i = 1; i <= n; i++) {\n    dp[i] = nums[i - 1];\n  }\n\n  for (let len = 1; len <= n; len++) {\n    for (let left = n - len + 1; left >= 1; left--) {\n      let max = 0;\n      for (let i = left; i <= left + len - 1; i++) {\n        const burst = dp[left - 1] * dp[i] * dp[left + len];\n        max = Math.max(max, burst + dp[i - 1] + dp[i + 1]);\n      }\n      dp[left + len - 1] = max;\n    }\n  }\n\n  return dp[n];\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/burst-balloons/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxCoins' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 13
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxCoins = function(nums) {\n  const n = nums.length;\n  const dp = Array(n + 2).fill(0); // Padded for boundary handling\n  for (let i = 1; i <= n; i++) {\n    dp[i] = nums[i - 1];\n  }\n\n  for (let len = 1; len <= n; len++) {\n    for (let left = 1; left + len - 1 <= n; left++) {\n      let max = 0;\n      for (let i = left; i <= left + len - 1; i++) {\n        const burst = dp[left - 1] * dp[i] * dp[left + len];\n        max = Math.max(max, burst + dp[i - 1] + dp[i + 1]);\n      }\n      dp[left + len - 1] = max;\n    }\n  }\n\n  return dp[n];\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}