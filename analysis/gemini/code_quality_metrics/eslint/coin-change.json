{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/coin-change/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var coinChange = function(coins, amount) {\n  const combinations = [];\n  const backtrack = (combo, remaining) => {\n    if (remaining === 0) {\n      combinations.push([...combo]);\n      return;\n    }\n    for (let coin of coins) {\n      if (remaining >= coin && (combo.length === 0 || coin >= combo[combo.length - 1])) {\n        backtrack([...combo, coin], remaining - coin);\n      }\n    }\n  };\n  backtrack([], amount);\n  const minCoins = combinations[0]?.length;\n  return minCoins === undefined ? -1 : minCoins;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/coin-change/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var coinChange = function(coins, amount) {\n  if (amount === 0) return 0;\n  if (amount < 0) return -1;\n  let minCoins = Number.MAX_SAFE_INTEGER;\n  for (let coin of coins) {\n    const remaining = coinChange(coins, amount - coin);\n    if (remaining !== -1) {\n      minCoins = Math.min(minCoins, remaining + 1);\n    }\n  }\n  return minCoins === Number.MAX_SAFE_INTEGER ? -1 : minCoins;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/coin-change/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var coinChange = function(coins, amount, memo = {}) {\n  if (amount in memo) return memo[amount];\n  if (amount === 0) return 0;\n  if (amount < 0) return -1;\n  let minCoins = Number.MAX_SAFE_INTEGER;\n  for (let coin of coins) {\n    const remaining = coinChange(coins, amount - coin, memo);\n    if (remaining !== -1) {\n      minCoins = Math.min(minCoins, remaining + 1);\n    }\n  }\n  memo[amount] = minCoins === Number.MAX_SAFE_INTEGER ? -1 : minCoins;\n  return memo[amount];\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/coin-change/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var coinChange = function(coins, amount) {\n  const dp = new Array(amount + 1).fill(Number.MAX_SAFE_INTEGER);\n  dp[0] = 0;\n  for (let i = 1; i <= amount; i++) {\n    for (let coin of coins) {\n      if (coin <= i && dp[i - coin] !== -1) {\n        dp[i] = Math.min(dp[i], dp[i - coin] + 1);\n      }\n    }\n  }\n  return dp[amount] === Number.MAX_SAFE_INTEGER ? -1 : dp[amount];\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/coin-change/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var coinChange = function(coins, amount) {\n  const dp = new Array(amount + 1).fill(0);\n  dp[0] = 1; // base case: 1 way to make amount 0 (using no coins)\n  for (let coin of coins) {\n    for (let i = coin; i <= amount; i++) {\n      dp[i] |= dp[i - coin]; // count combinations using current coin or not\n    }\n  }\n  return dp[amount] > 0 ? dp[amount].toString(2).split('1').length - 1 : -1;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/coin-change/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'coinChange' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var coinChange = function(coins, amount) {\n  coins.sort((a, b) => b - a); // sort in descending order\n  let count = 0;\n  while (amount > 0) {\n    for (let coin of coins) {\n      if (coin <= amount) {\n        count += Math.floor(amount / coin);\n        amount %= coin;\n        break;\n      }\n    }\n    if (amount === 0) {\n      return count;\n    } else {\n      return -1;\n    }\n  }\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}