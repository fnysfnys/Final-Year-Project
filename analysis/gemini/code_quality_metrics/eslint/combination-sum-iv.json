{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/combination-sum-iv/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'combinationSum4' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 25
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function combinationSum4(nums, target) {\n  const stack = [[0, []]];\n  while (stack.length) {\n    const [currentSum, currentList] = stack.pop();\n    if (currentSum === target) {\n      return true;\n    }\n    for (const num of nums) {\n      if (currentSum + num <= target) {\n        stack.push([currentSum + num, [...currentList, num]]);\n      }\n    }\n  }\n  return false;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/combination-sum-iv/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'combinationSum4' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 25
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function combinationSum4(nums, target) {\n  const dp = Array(target + 1).fill(0);\n  dp[0] = 1;\n  for (let i = 1; i <= target; i++) {\n    for (const num of nums) {\n      if (i >= num) {\n        dp[i] += dp[i - num];\n      }\n    }\n  }\n  return dp[target];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/combination-sum-iv/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'combinationSum4' is defined but never used.",
                    "line": 2,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 2,
                    "endColumn": 25
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "const memo = {};\nfunction combinationSum4(nums, target) {\n  if (memo[target] !== undefined) {\n    return memo[target];\n  }\n  if (target === 0) {\n    return 1;\n  }\n  let count = 0;\n  for (const num of nums) {\n    if (target >= num) {\n      count += combinationSum4(nums, target - num);\n    }\n  }\n  memo[target] = count;\n  return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/combination-sum-iv/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'combinationSum4' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 25
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function combinationSum4(nums, target) {\n  const result = [];\n  function backtrack(currentSum, currentList) {\n    if (currentSum === target) {\n      result.push([...currentList]);\n      return;\n    }\n    for (const num of nums) {\n      if (currentSum + num <= target) {\n        backtrack(currentSum + num, [...currentList, num]);\n      }\n    }\n  }\n  backtrack(0, []);\n  return result.length;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/combination-sum-iv/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'combinationSum4' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 25
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function combinationSum4(nums, target) {\n  const n = nums.length;\n  const ways = Array(target + 1).fill(0);\n  ways[0] = 1;\n  for (let i = 1; i <= target; i++) {\n    for (let j = 0; j < n; j++) {\n      if (i >= nums[j]) {\n        ways[i] = (ways[i] + ways[i - nums[j]]) % Math.pow(10, 9);\n      }\n    }\n  }\n  return ways[target];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/combination-sum-iv/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'combinationSum4' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 25
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function combinationSum4(nums, target) {\n  const dp = Array(target + 1).fill(0).map(() => Array(nums.length).fill(0));\n  for (let i = 0; i < nums.length; i++) {\n    dp[nums[i]][i] = 1;\n  }\n  for (let i = 1; i <= target; i++) {\n    for (let j = 0; j < nums.length; j++) {\n      for (let k = 0; k < j; k++) {\n        if (i >= nums[j] && dp[i - nums[j]][k] > 0) {\n          dp[i][j] += dp[i - nums[j]][k];\n        }\n      }\n    }\n  }\n  return dp[target].reduce((a, b) => a + b, 0);\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}