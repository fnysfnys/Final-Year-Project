{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  let count = 0;\n  const used = new Array(10).fill(false);\n\n  function backtrack(position) {\n    if (position === n) {\n      count++;\n      return;\n    }\n    for (let digit = 0; digit < 10; digit++) {\n      if (!used[digit]) {\n        used[digit] = true;\n        backtrack(position + 1);\n        used[digit] = false;\n      }\n    }\n  }\n\n  backtrack(0);\n  return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  let count = 9;\n  let available = 9;\n  for (let i = 2; i <= n; i++) {\n    count *= available--;\n  }\n  return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  const available = 9;\n  return Math.factorial(available) / (Math.factorial(available - n + 1) * Math.factorial(n));\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  const dp = [1, 10];\n  for (let i = 2; i <= n; i++) {\n    dp[i] = dp[i - 1] * (10 - i + 1);\n  }\n  return dp[n];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution7": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution7.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  const allowed = (1 << 10) - 1;\n  let count = 0;\n  for (let i = allowed; i > 0; i = (i - 1) & allowed) {\n    const used = i.toString(2).length - i.toString(2).replace(/1/g, \"\").length;\n    if (used === n) {\n      count++;\n    }\n  }\n  return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'digits' is assigned a value but never used.",
                    "line": 3,
                    "column": 9,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 3,
                    "endColumn": 15
                }
            ],
            "suppressedMessages": [],
            "errorCount": 2,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  const digits = \"0123456789\".slice(0, n);\n  let count = 0;\n  for (let i = 0; i < Math.pow(10, n); i++) {\n    const num = String(i).padStart(n, \"0\");\n    if (new Set(num).size === num.length) {\n      count++;\n    }\n  }\n  return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  return n * countNumbersWithUniqueDigits(n - 1);\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution8": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/count-numbers-with-unique-digits/JavaScript/solution8.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'countNumbersWithUniqueDigits' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 38
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function countNumbersWithUniqueDigits(n) {\n  if (n === 0) return 1;\n  const digits = \"0123456789\".slice(0, n);\n  let count = 0;\n  for (const permutation of permutations(digits)) {\n    if (new Set(permutation).size === permutation.length) {\n      count++;\n    }\n  }\n  return count;\n\n  function permutations(remaining) {\n    if (remaining.length === 1) return [remaining];\n    const perms = [];\n    for (let i = 0; i < remaining.length; i++) {\n      const char = remaining[i];\n      const rest = remaining.slice(0, i).concat(remaining.slice(i + 1));\n      for (const perm of permutations(rest)) {\n        perms.push(char + perm);\n      }\n    }\n    return perms;\n  }\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}