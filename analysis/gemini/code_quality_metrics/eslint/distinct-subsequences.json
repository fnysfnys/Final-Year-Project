{
    "JavaScript": {
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/distinct-subsequences/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numDistinct' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numDistinct = function(s, t) {\n  const m = s.length, n = t.length;\n  const dp = new Array(m + 1).fill(0).map(() => new Array(n + 1).fill(0));\n  \n  for (let i = 0; i <= m; i++) {\n    dp[i][0] = 1; // Empty subsequence matches empty string\n  }\n  \n  for (let i = 1; i <= m; i++) {\n    for (let j = 1; j <= n; j++) {\n      dp[i][j] = dp[i - 1][j]; // Skip current char in s\n      if (s[i - 1] === t[j - 1]) {\n        dp[i][j] += dp[i - 1][j - 1]; // Include current char if matches\n      }\n    }\n  }\n  \n  return dp[m][n];\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/distinct-subsequences/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numDistinct' is assigned a value but never used.",
                    "line": 3,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 3,
                    "endColumn": 16
                },
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'tHash' is assigned a value but never used.",
                    "line": 6,
                    "column": 9,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 6,
                    "endColumn": 14
                },
                {
                    "ruleId": "no-undef",
                    "severity": 2,
                    "message": "'MOD' is not defined.",
                    "line": 22,
                    "column": 49,
                    "nodeType": "Identifier",
                    "messageId": "undef",
                    "endLine": 22,
                    "endColumn": 52
                }
            ],
            "suppressedMessages": [],
            "errorCount": 3,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "const prime = 113;\n\nvar numDistinct = function(s, t) {\n  const m = s.length, n = t.length;\n  const sHash = rollingHash(s, n);\n  const tHash = rollingHash(t);\n  let ans = 0;\n  \n  for (let i = 0; i < m - n + 1; i++) {\n    const subHash = rollingHash(s.slice(i, i + n));\n    if (sHash === subHash && checkEqual(s.slice(i, i + n), t)) {\n      ans++;\n    }\n  }\n  \n  return ans;\n};\n\nfunction rollingHash(str, len) {\n  let hash = 0;\n  for (let i = 0; i < len; i++) {\n    hash = (hash * prime + str.charCodeAt(i)) % MOD;\n  }\n  return hash;\n}\n\nfunction checkEqual(str1, str2) {\n  for (let i = 0; i < str1.length; i++) {\n    if (str1[i] !== str2[i]) return false;\n  }\n  return true;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/distinct-subsequences/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numDistinct' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var numDistinct = function(s, t) {\n  let ans = 0;\n  let i = 0, j = 0;\n  \n  while (i < s.length) {\n    if (s[i] === t[j]) {\n      j++;\n      if (j === t.length) {\n        ans++;\n        j = 0;\n      }\n    }\n    i++;\n  }\n  \n  return ans;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/distinct-subsequences/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'numDistinct' is assigned a value but never used.",
                    "line": 3,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 3,
                    "endColumn": 16
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "const memo = {};\n\nvar numDistinct = function(s, t, i = 0, j = 0) {\n  const key = i + \";\" + j;\n  if (memo[key]) return memo[key];\n  \n  if (j === t.length) return 1; // Base case: t matched\n  if (i === s.length) return 0; // Base case: s exhausted\n  \n  const ans = numDistinct(s, t, i + 1, j) + (s[i] === t[j] ? numDistinct(s, t, i + 1, j + 1) : 0);\n  memo[key] = ans;\n  return ans;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}