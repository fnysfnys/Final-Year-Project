{
    "JavaScript": {
        "solution5": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/integer-replacement/JavaScript/solution5.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'integerReplacement' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 28
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function integerReplacement(n) {\n  const dp = new Array(n + 1).fill(Infinity);\n  dp[1] = 0;\n  for (let i = 2; i <= n; i++) {\n    if (i % 2 === 0) {\n      dp[i] = Math.min(dp[i], dp[i / 2] + 1);\n    } else {\n      dp[i] = Math.min(dp[i], dp[i + 1] + 1, dp[i - 1] + 1);\n    }\n  }\n  return dp[n];\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/integer-replacement/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'integerReplacement' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 28
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function integerReplacement(n) {\n  if (n === 1) return 0;\n  if (n % 2 === 0) return 1 + integerReplacement(n / 2);\n  return 1 + Math.min(integerReplacement(n + 1), integerReplacement(n - 1));\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/integer-replacement/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'integerReplacement' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 28
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function integerReplacement(n) {\n  const seen = new Set();\n  const dfs = (num, steps) => {\n    if (num === 1) return steps;\n    if (seen.has(num)) return;\n    seen.add(num);\n    if (num % 2 === 0) {\n      steps = dfs(num / 2, steps + 1);\n    } else {\n      steps = Math.min(dfs(num + 1, steps + 1), dfs(num - 1, steps + 1));\n    }\n    return steps;\n  };\n  return dfs(n, 0);\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/integer-replacement/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'integerReplacement' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 28
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function integerReplacement(n) {\n  const queue = [[n, 0]];\n  const seen = new Set([n]);\n  while (queue.length) {\n    const [num, steps] = queue.shift();\n    if (num === 1) return steps;\n    if (!seen.has(num / 2)) {\n      queue.push([num / 2, steps + 1]);\n      seen.add(num / 2);\n    }\n    if (num % 2 === 1) {\n      if (!seen.has(num + 1)) {\n        queue.push([num + 1, steps + 1]);\n        seen.add(num + 1);\n      }\n      if (!seen.has(num - 1)) {\n        queue.push([num - 1, steps + 1]);\n        seen.add(num - 1);\n      }\n    }\n  }\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution6": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/integer-replacement/JavaScript/solution6.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'integerReplacement' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 28
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function integerReplacement(n) {\n  let count = 0;\n  while (n !== 1) {\n    if (n % 2 === 0) {\n      n >>= 1;\n      count++;\n    } else if (n === 3 || (n & 3) === 1) {\n      n++;\n      count++;\n    } else {\n      n--;\n      count++;\n    }\n  }\n  return count;\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/integer-replacement/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'integerReplacement' is defined but never used.",
                    "line": 1,
                    "column": 10,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 28
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "function integerReplacement(n) {\n  const memo = {};\n  const helper = (num) => {\n    if (num === 1) return 0;\n    if (memo[num]) return memo[num];\n    if (num % 2 === 0) {\n      memo[num] = 1 + helper(num / 2);\n    } else {\n      memo[num] = 1 + Math.min(helper(num + 1), helper(num - 1));\n    }\n    return memo[num];\n  };\n  return helper(n);\n}\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}