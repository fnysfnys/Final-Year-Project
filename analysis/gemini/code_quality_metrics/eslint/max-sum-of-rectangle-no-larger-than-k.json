{
    "JavaScript": {
        "solution1": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/max-sum-of-rectangle-no-larger-than-k/JavaScript/solution1.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxSumSubmatrix' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxSumSubmatrix = function(matrix, k) {\n  let maxSum = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < matrix.length; i++) {\n    for (let j = 0; j < matrix[0].length; j++) {\n      let sum = matrix[i][j];\n      for (let x = i; x < matrix.length; x++) {\n        for (let y = j; y < matrix[0].length; y++) {\n          sum += matrix[x][y];\n          if (sum <= k && sum > maxSum) {\n            maxSum = sum;\n          }\n        }\n      }\n    }\n  }\n  return maxSum;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution4": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/max-sum-of-rectangle-no-larger-than-k/JavaScript/solution4.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxSumSubmatrix' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxSumSubmatrix = function(matrix, k) {\n  function canFit(subarraySum) {\n    let currentSum = 0;\n    for (let num of subarraySum) {\n      currentSum += num;\n      if (currentSum > subarraySum) {\n        return false;\n      }\n    }\n    return true;\n  }\n  \n  let maxSum = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < matrix.length; i++) {\n    let prefixSum = 0;\n    let subarraySum = [];\n    for (let j = 0; j < matrix[0].length; j++) {\n      prefixSum += matrix[i][j];\n      subarraySum.push(prefixSum);\n      let left = 0;\n      let right = subarraySum.length - 1;\n      while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n        if (canFit(subarraySum.slice(0, mid + 1))) {\n          maxSum = Math.max(maxSum, prefixSum - subarraySum[mid]);\n          right = mid - 1;\n        } else {\n          left = mid + 1;\n        }\n      }\n    }\n  }\n  return maxSum <= k ? maxSum : -1;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution3": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/max-sum-of-rectangle-no-larger-than-k/JavaScript/solution3.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxSumSubmatrix' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxSumSubmatrix = function(matrix, k) {\n  let maxSum = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < matrix.length; i++) {\n    let currentSum = 0;\n    let minPrefixSum = 0;\n    for (let j = 0; j < matrix[0].length; j++) {\n      currentSum += matrix[i][j];\n      maxSum = Math.max(maxSum, currentSum - minPrefixSum);\n      minPrefixSum = Math.min(minPrefixSum, currentSum);\n    }\n  }\n  return maxSum <= k ? maxSum : -1;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        },
        "solution2": {
            "filePath": "/Users/gabrielturner/UCL/Year4/FYP/FYP/model_outputs/gemini/parsed_outputs/max-sum-of-rectangle-no-larger-than-k/JavaScript/solution2.js",
            "messages": [
                {
                    "ruleId": "no-unused-vars",
                    "severity": 2,
                    "message": "'maxSumSubmatrix' is assigned a value but never used.",
                    "line": 1,
                    "column": 5,
                    "nodeType": "Identifier",
                    "messageId": "unusedVar",
                    "endLine": 1,
                    "endColumn": 20
                }
            ],
            "suppressedMessages": [],
            "errorCount": 1,
            "fatalErrorCount": 0,
            "warningCount": 0,
            "fixableErrorCount": 0,
            "fixableWarningCount": 0,
            "source": "var maxSumSubmatrix = function(matrix, k) {\n  const prefixSum = [];\n  for (let i = 0; i < matrix.length; i++) {\n    prefixSum[i] = new Array(matrix[0].length + 1).fill(0);\n    for (let j = 0; j < matrix[0].length; j++) {\n      prefixSum[i][j + 1] = prefixSum[i][j] + matrix[i][j];\n    }\n  }\n  \n  let maxSum = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < matrix.length; i++) {\n    for (let j = 0; j < matrix[0].length; j++) {\n      for (let x = i + 1; x <= matrix.length; x++) {\n        for (let y = j + 1; y <= matrix[0].length; y++) {\n          const sum = prefixSum[x - 1][y] - prefixSum[i][j];\n          if (sum <= k && sum > maxSum) {\n            maxSum = sum;\n          }\n        }\n      }\n    }\n  }\n  return maxSum;\n};\n",
            "usedDeprecatedRules": [
                {
                    "ruleId": "no-extra-semi",
                    "replacedBy": []
                },
                {
                    "ruleId": "no-mixed-spaces-and-tabs",
                    "replacedBy": []
                }
            ]
        }
    }
}